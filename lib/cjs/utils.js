"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.genExternalNullifier = exports.Fq = exports.SNARK_FIELD_SIZE = void 0;
const solidity_1 = require("@ethersproject/solidity");
const ffjavascript_1 = require("ffjavascript");
/*
  This is the "Baby Jubjub" curve described here:
  https://iden3-docs.readthedocs.io/en/latest/_downloads/33717d75ab84e11313cc0d8a090b636f/Baby-Jubjub.pdf
*/
exports.SNARK_FIELD_SIZE = BigInt("21888242871839275222246405745257275088548364400416034343698204186575808495617");
// Creates the finite field
exports.Fq = new ffjavascript_1.ZqField(exports.SNARK_FIELD_SIZE);
/**
 * Generates an External Nullifier for use with RLN.
 * @param plaintext String. //TODO: better description
 * @returns External Nullifier in a string.
 */
function genExternalNullifier(plaintext) {
    const hashed = (0, solidity_1.keccak256)(["string"], [plaintext]);
    const hexStr = `0x${hashed.slice(8)}`;
    const len = 32 * 2;
    const h = hexStr.slice(2, len + 2);
    return `0x${h.padStart(len, "0")}`;
}
exports.genExternalNullifier = genExternalNullifier;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsc0RBQW1EO0FBQ25ELCtDQUFzQztBQUV0Qzs7O0VBR0U7QUFDVyxRQUFBLGdCQUFnQixHQUFHLE1BQU0sQ0FBQywrRUFBK0UsQ0FBQyxDQUFBO0FBRXZILDJCQUEyQjtBQUNkLFFBQUEsRUFBRSxHQUFHLElBQUksc0JBQU8sQ0FBQyx3QkFBZ0IsQ0FBQyxDQUFBO0FBRS9DOzs7O0dBSUc7QUFDSCxTQUFnQixvQkFBb0IsQ0FBQyxTQUFpQjtJQUNwRCxNQUFNLE1BQU0sR0FBRyxJQUFBLG9CQUFTLEVBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUE7SUFDakQsTUFBTSxNQUFNLEdBQUcsS0FBSyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUE7SUFDckMsTUFBTSxHQUFHLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQTtJQUNsQixNQUFNLENBQUMsR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUE7SUFFbEMsT0FBTyxLQUFLLENBQUMsQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUE7QUFDcEMsQ0FBQztBQVBELG9EQU9DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsga2VjY2FrMjU2IH0gZnJvbSBcIkBldGhlcnNwcm9qZWN0L3NvbGlkaXR5XCJcbmltcG9ydCB7IFpxRmllbGQgfSBmcm9tICdmZmphdmFzY3JpcHQnXG5cbi8qXG4gIFRoaXMgaXMgdGhlIFwiQmFieSBKdWJqdWJcIiBjdXJ2ZSBkZXNjcmliZWQgaGVyZTpcbiAgaHR0cHM6Ly9pZGVuMy1kb2NzLnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9fZG93bmxvYWRzLzMzNzE3ZDc1YWI4NGUxMTMxM2NjMGQ4YTA5MGI2MzZmL0JhYnktSnVianViLnBkZlxuKi9cbmV4cG9ydCBjb25zdCBTTkFSS19GSUVMRF9TSVpFID0gQmlnSW50KFwiMjE4ODgyNDI4NzE4MzkyNzUyMjIyNDY0MDU3NDUyNTcyNzUwODg1NDgzNjQ0MDA0MTYwMzQzNDM2OTgyMDQxODY1NzU4MDg0OTU2MTdcIilcblxuLy8gQ3JlYXRlcyB0aGUgZmluaXRlIGZpZWxkXG5leHBvcnQgY29uc3QgRnEgPSBuZXcgWnFGaWVsZChTTkFSS19GSUVMRF9TSVpFKVxuXG4vKipcbiAqIEdlbmVyYXRlcyBhbiBFeHRlcm5hbCBOdWxsaWZpZXIgZm9yIHVzZSB3aXRoIFJMTi5cbiAqIEBwYXJhbSBwbGFpbnRleHQgU3RyaW5nLiAvL1RPRE86IGJldHRlciBkZXNjcmlwdGlvblxuICogQHJldHVybnMgRXh0ZXJuYWwgTnVsbGlmaWVyIGluIGEgc3RyaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2VuRXh0ZXJuYWxOdWxsaWZpZXIocGxhaW50ZXh0OiBzdHJpbmcpOiBzdHJpbmcge1xuICBjb25zdCBoYXNoZWQgPSBrZWNjYWsyNTYoW1wic3RyaW5nXCJdLCBbcGxhaW50ZXh0XSlcbiAgY29uc3QgaGV4U3RyID0gYDB4JHtoYXNoZWQuc2xpY2UoOCl9YFxuICBjb25zdCBsZW4gPSAzMiAqIDJcbiAgY29uc3QgaCA9IGhleFN0ci5zbGljZSgyLCBsZW4gKyAyKVxuXG4gIHJldHVybiBgMHgke2gucGFkU3RhcnQobGVuLCBcIjBcIil9YFxufVxuIl19